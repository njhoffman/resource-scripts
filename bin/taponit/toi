#!/bin/bash

BASE_DIR="/home/vagrant/projects/taponit"
TAILS_DIR="/home/vagrant/projects/tails3/bin"
REDMON_DIR="/home/vagrant/projects/redmon-pretty/bin"
REDMON_BIN="redmon-pretty"
TWILIO_SENDER_DIR="/home/vagrant/projects/toi-twilio"
MESSAGES_DIR="/home/vagrant/projects/toi-redmon/bin"
MESSAGES_BIN="toi-redmon"
SUB_DIR=""

function usage {
cat << EOF
Usage: toi [MODULE]
  Change directory to module name or nickname
Usage: toi [COMMAND] [ARGUMENTS]
  Execute one of the following commands with arguments for different sites/environments
  Commands:
    showLogs        Follow AWS logs with JSON parser
    redis           Launch redis-cli
    redis monitor   Monitor redis transactions and pretty print
    redis messages  Monitor incoming and outgoing mms/sms messages by redis activity
    sql             Launch sqsh
    launch          Run different combinations of modules

Type "help [COMMAND]" to get more information about each command.

  Comming soon:
    --optional tmux
    --automatically add to developer group
    --useful aws commands
    --ssh_toi
    --ssh and docker exec
    --ssh and docker exec and pm2 stop
    --check for private key existence
    --eb health multiple screens
    --logs search by keyword, level, user, ip
    --cloud watch stats
EOF
}

function showLogs {
  TARGET_BUCKET="taponit-logs"
  TARGET_STAGE="production"
  TMUX_WINDOW="logs-prod"
  [[ "$1" == "stage" ]] && TARGET_BUCKET="taponit-logs-stage" && TARGET_STAGE="stage" && TMUX_WINDOW="logs-stage"
  [[ "$1" == "development" ]] && TARGET_BUCKET="taponit-logs-development" && TARGET_STAGE="development" && TMUX_WINDOW="logs-dev"
  [[ "$1" == "mac" ]] && TARGET_BUCKET="taponit-logs-wallaces" && TARGET_STAGE="mac" && TMUX_WINDOW="logs-mac"
  [[ "$1" == "wallaces" ]] && TARGET_BUCKET="taponit-logs-wallaces" && TARGET_STAGE="wallaces" && TMUX_WINDOW="logs-wallaces"
  [[ "$1" == "caseys" ]] && TARGET_BUCKET="taponit-logs-wallaces" && TARGET_STAGE="caseys" && TMUX_WINDOW="logs-caseys"
  tmux rename-window $TMUX_WINDOW
  echo -e "\nShowing TapOnIt logs for '$TARGET_STAGE' in bucket '$TARGET_BUCKET'...\n"
  $TAILS_DIR/tails3 --bucket=$TARGET_BUCKET --stage=$TARGET_STAGE
}

function redis {
  if [[ "$1" == "monitor" ]]; then
    ssh -i /home/vagrant/.ssh/jumpOnIt.pem -f -o ExitOnForwardFailure=yes -L 4040:taponit.ys76rf.ng.0001.use1.cache.amazonaws.com:6379 ec2-user@52.205.254.219 sleep 10
    redis-cli -p 4040 monitor | $REDMON_DIR/$REDMON_BIN
  elif [[ "$1" == "messages" ]]; then
    ssh -i /home/vagrant/.ssh/jumpOnIt.pem -f -o ExitOnForwardFailure=yes -L 4040:taponit.ys76rf.ng.0001.use1.cache.amazonaws.com:6379 ec2-user@52.205.254.219 sleep 10
    redis-cli -p 4040 monitor | $MESSAGES_DIR/$MESSAGES_BIN
  else
    ssh -i /home/vagrant/.ssh/jumpOnIt.pem -f -o ExitOnForwardFailure=yes -L 4040:taponit.ys76rf.ng.0001.use1.cache.amazonaws.com:6379 ec2-user@35.172.31.52  sleep 10
    # ssh -i /home/vagrant/.ssh/jumpOnIt.pem -f -o ExitOnForwardFailure=yes -L 4040:jumponit-dev.ys76rf.0001.use1.cache.amazonaws.com:6379 ec2-user@34.224.218.100 sleep 10
    # ssh -i /home/vagrant/.ssh/jumpOnIt.pem -f -o ExitOnForwardFailure=yes -L 4040:taponit.ys76rf.ng.0001.use1.cache.amazonaws.com:6379 ec2-user@54.85.115.26 sleep 10
    # ssh -i /home/vagrant/.ssh/jumpOnIt.pem -f -o ExitOnForwardFailure=yes -L 4040:wallaces.ys76rf.ng.0001.use1.cache.amazonaws.com:6379 ec2-user@35.170.165.254  sleep 10
    # ssh -i /home/vagrant/.ssh/jumpOnIt.pem -f -o ExitOnForwardFailure=yes -L 4040:caseys.ys76rf.0001.use1.cache.amazonaws.com:6379 ec2-user@54.204.194.63  sleep 10
    # ssh -i /home/vagrant/.ssh/jumpOnIt.pem -f -o ExitOnForwardFailure=yes -L 4040:mac.ys76rf.0001.use1.cache.amazonaws.com:6379 ec2-user@54.204.194.63  sleep 10

    redis-cli -p 4040
  fi
}

function sql {
  TARGET_SERVER="jumponit.cyiwtm0qww1w.us-east-1.rds.amazonaws.com"
	[[ "$1" == "stage" ]] && TARGET_SERVER="jumponit-stage.cyiwtm0qww1w.us-east-1.rds.amazonaws.com"
	sqsh -S $TARGET_SERVER -U jump_sa -P 17U9Vj0744iN16U
}

function launch {
  # cmp-trk-snd-rcv-web #cmp-trk-snd-rcv cmp-trk #cmp-snd-rcv #
  # cat /tmp/combined | env NODE_ENV=combined debugger256
  pipe=/tmp/combined
  [[ ! -p $pipe ]] && mkfifo $pipe
  CMD_SERVER="dev:json"
  CMD_CLIENT="dev"
  if [[ "$1" == "web" ]]; then
    tmux new-window -n "web"
    tmux split-window -v -p 75
    tmux send-keys -t 0 "cd $BASE_DIR/UMIClient && npm run $CMD_CLIENT & cd $BASE_DIR/mobileClient && npm run $CMD_CLIENT" C-M
    tmux send-keys -t 1 "(cd $BASE_DIR/UMIServer && npm run $CMD_SERVER & cd $BASE_DIR/mobileServer && npm run $CMD_SERVER) | tee /tmp/combined | debugger256" C-M
  elif [[ "$1" == "receivers-senders" ]]; then
    tmux new-window -n "rcv-send"
    tmux split-window -v -p 50
    tmux send-keys -t 0 "(cd $BASE_DIR/workers/smsReceipts && npm run $CMD_SERVER & cd $BASE_DIR/workers/smsReceive && npm run $CMD_SERVER) | tee /tmp/combined | debugger256" C-M
    tmux send-keys -t 1 "(cd $BASE_DIR/workers/smsReceipts && npm run $CMD_SERVER & cd $BASE_DIR/workers/smsReceive && npm run $CMD_SERVER) | tee /tmp/combined | debugger256" C-M
  elif [[ "$1" == "receivers" ]]; then
    tmux new-window -n "receivers"
    tmux split-window -v -p 50
    tmux send-keys -t 0 "cd $BASE_DIR/workers/smsReceipts && npm run $CMD_SERVER | tee /tmp/combined | debugger256" C-M
    tmux send-keys -t 1 "cd $BASE_DIR/workers/smsReceive && npm run $CMD_SERVER | tee /tmp/combined | debugger256" C-M
  elif [[ "$1" == "senders" ]]; then
    tmux new-window -n "senders"
    tmux split-window -v -p 50
    tmux send-keys -t 0 "cd $BASE_DIR/workers/mmsSend && npm run $CMD_SERVER | tee /tmp/combined | debugger256" C-M
    tmux send-keys -t 1 "cd $BASE_DIR/workers/smsSend && npm run $CMD_SERVER | tee /tmp/combined | debugger256" C-M
  elif [[ "$1" == "tracker" ]]; then
    tmux new-window -n "tracker"
    tmux send-keys -t 0 "cd $BASE_DIR/services/tracker && npm run $CMD_SERVER | tee /tmp/combined | debugger256" C-M
  elif [[ "$1" == "campaign" ]]; then
    tmux new-window -n "campaign"
    tmux send-keys -t 0 "cd $BASE_DIR/workers/campaignScheduler && npm run $CMD_SERVER | tee /tmp/combined | debugger256" C-M
  elif [[ "$1" == "ngrok" ]]; then
    tmux new-window -n "ngrok"
    tmux split-window -v -p 75
    tmux send-keys -t 0 "ngrok start --all" C-M
    tmux send-keys -t 1 "cd $TWILIO_SENDER_DIR && node index.js" C-M
  fi
}

if [[ $# -gt 0 ]]; then
  case "$1" in
    sql)
      sql $2
      ;;
    redis)
      redis $2
      ;;
    logs)
      showLogs $2
      ;;
    launch)
      launch $2
      ;;
    w|workers)
      SUB_DIR="workers"
      ;;
    us|umi|admin|umiserver|umiServer|UMIServer)
      SUB_DIR="UMIServer"
      ;;
    uc|umic|umiclient|umiClient|UMIClient)
      SUB_DIR="UMIClient"
      ;;
    m|ms|mobile|mobileserver|mobileServer)
      SUB_DIR="mobileServer"
      ;;
    mc|mobilec|mobileclient|mobileClient)
      SUB_DIR="mobileClient"
      ;;
    cs|sched|campaignscheduler|campaignScheduler)
      SUB_DIR="workers/campaignScheduler"
      ;;
    cr|campretry|campaignretry|campaignRetry)
      SUB_DIR="workers/campaignRetry"
      ;;
    mr|messageretry|messageRetry)
      SUB_DIR="workers/messageRetry"
      ;;
    mms|mmssend|mmsSend)
      SUB_DIR="workers/mmsSend"
      ;;
    sms|smssend|smsSend)
      SUB_DIR="workers/smsSend"
      ;;
    sr|smsreceive|smsReceive)
      SUB_DIR="workers/smsReceive"
      ;;
    r|rcp|rcpt|src|smsreceipts|smsReceipts)
      SUB_DIR="workers/smsReceipts"
      ;;
    t|tracker)
      SUB_DIR="services/tracker"
      ;;
    j|jl|joi|joi-lib)
      SUB_DIR="joi-lib"
      ;;
    *)
      echo "Unrecognized command $1"
      usage
      return
  esac
fi

echo "Changing to $BASE_DIR/$SUB_DIR"
cd $BASE_DIR/$SUB_DIR

if [[ $# -gt 1 ]]; then
  case "$2" in
    v|vim)
      vim package.json
      ;;
    *)
      ;;
    esac
fi

